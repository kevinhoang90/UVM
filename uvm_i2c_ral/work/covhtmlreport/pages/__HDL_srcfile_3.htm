
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>`ifndef  SUBC
<a name="2"><q-n>     2  </q-n></a>`<q-a>define</q-w> SUBC
<a name="3"><q-n>     3  </q-n></a><q-w>class</q-w> subscriber <q-w>extends</q-w> uvm_subscriber #(packet);
<a name="4"><q-n>     4  </q-n></a>    `uvm_component_utils(subscriber)
<a name="5"><q-n>     5  </q-n></a>    uvm_analysis_imp #(packet, subscriber) sub_port;
<a name="6"><q-n>     6  </q-n></a>
<a name="7"><q-n>     7  </q-n></a>    <q-w>logic</q-w> [7:0] paddr;
<a name="8"><q-n>     8  </q-n></a>    <q-w>logic</q-w> pwrite;
<a name="9"><q-n>     9  </q-n></a>    <q-w>logic</q-w> [7:0] pwdata;
<a name="10"><q-n>     10  </q-n></a>
<a name="11"><q-n>     11  </q-n></a>    <q-w>covergroup</q-w> cov;
<a name="12"><q-n>     12  </q-n></a>        cov_addr: <q-w>coverpoint</q-w> paddr {
<a name="13"><q-n>     13  </q-n></a>            <q-w>bins</q-w> bin0 = {0};
<a name="14"><q-n>     14  </q-n></a>            <q-w>bins</q-w> bin1 = {1};
<a name="15"><q-n>     15  </q-n></a>            <q-w>bins</q-w> bin2 = {2};
<a name="16"><q-n>     16  </q-n></a>            <q-w>bins</q-w> bin4 = {4};
<a name="17"><q-n>     17  </q-n></a>            <q-w>bins</q-w> bin5 = {5};
<a name="18"><q-n>     18  </q-n></a>        }
<a name="19"><q-n>     19  </q-n></a>
<a name="20"><q-n>     20  </q-n></a>        cov_paddr_slave_addr: <q-w>coverpoint</q-w> paddr {
<a name="21"><q-n>     21  </q-n></a>            <q-w>bins</q-w> bin3 = {3};
<a name="22"><q-n>     22  </q-n></a>        }
<a name="23"><q-n>     23  </q-n></a>
<a name="24"><q-n>     24  </q-n></a>        cov_slave_addr: <q-w>coverpoint</q-w> pwdata {
<a name="25"><q-n>     25  </q-n></a>            <q-w>bins</q-w> bin7 = {8'h20};
<a name="26"><q-n>     26  </q-n></a>            <q-w>bins</q-w> bin8 = {8'h21};
<a name="27"><q-n>     27  </q-n></a>        }
<a name="28"><q-n>     28  </q-n></a>
<a name="29"><q-n>     29  </q-n></a>        cov_write_addr_slave: <q-w>cross</q-w> cov_paddr_slave_addr, cov_slave_addr;
<a name="30"><q-n>     30  </q-n></a>    <q-w>endgroup</q-w>
<a name="31"><q-n>     31  </q-n></a>
<a name="32"><q-n>     32  </q-n></a>    <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name = <q-l>"subscriber"</q-l>, uvm_component parent);
<a name="33"><q-n>     33  </q-n></a>        <q-w>super</q-w>.<q-w>new</q-w>(name, parent);
<a name="34"><q-n>     34  </q-n></a>        cov = <q-w>new</q-w>();
<a name="35"><q-n>     35  </q-n></a>        sub_port = <q-w>new</q-w>(<q-l>"sub_port"</q-l>, <q-w>this</q-w>);
<a name="36"><q-n>     36  </q-n></a>    <q-w>endfunction</q-w>
<a name="37"><q-n>     37  </q-n></a>
<a name="38"><q-n>     38  </q-n></a>    <q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="39"><q-n>     39  </q-n></a>        <q-w>super</q-w>.build_phase(phase);
<a name="40"><q-n>     40  </q-n></a>        `uvm_info(<q-l>"SUBSCRIBER_CLASS"</q-l>, <q-l>"Inside build phase!"</q-l>, UVM_LOW)
<a name="41"><q-n>     41  </q-n></a>    <q-w>endfunction</q-w>
<a name="42"><q-n>     42  </q-n></a>
<a name="43"><q-n>     43  </q-n></a>    <q-w>virtual</q-w> <q-w>function</q-w> <q-w>void</q-w> write(packet t);
<a name="44"><q-n>     44  </q-n></a>        paddr = t.paddr;
<a name="45"><q-n>     45  </q-n></a>        pwrite = t.pwrite;
<a name="46"><q-n>     46  </q-n></a>        <q-w>if</q-w> (t.pwrite)
<a name="47"><q-n>     47  </q-n></a>            pwdata = t.pdata;
<a name="48"><q-n>     48  </q-n></a>        cov.sample();
<a name="49"><q-n>     49  </q-n></a>    <q-w>endfunction</q-w>
<a name="50"><q-n>     50  </q-n></a><q-w>endclass</q-w>: subscriber
<a name="51"><q-n>     51  </q-n></a>`<q-a>endif</q-w></pre>
</tt>

  
</body>
</html>
